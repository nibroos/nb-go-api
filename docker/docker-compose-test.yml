name: nb-go-api-test

services:

  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    container_name: gateway-test
    volumes:
      - ../gateway/nginx-test.conf:/etc/nginx/nginx.conf # Use test NGINX config
    ports:
      - "50071:50051" # Expose gRPC port
      - "4071:4001"   # Expose HTTP REST port
    networks:
      - nb-go-api-test-network
    depends_on:
      - service

  service:
    build: 
      context: ../service
      dockerfile: Dockerfile.test
    networks:
      - nb-go-api-test-network
    ports:
      - "50051"
      - "4001"
    container_name: service-test
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_TEST} # Use test DB
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST_TEST}
      GATEWAY_PORT: ${GATEWAY_PORT}
      SERVICE_GRPC_PORT: ${SERVICE_GRPC_PORT}
      SERVICE_REST_PORT: ${SERVICE_REST_PORT}
      MASTER_SERVICE_GRPC_PORT: ${MASTER_SERVICE_GRPC_PORT}
      MASTER_SERVICE_REST_PORT: ${MASTER_SERVICE_REST_PORT}
      ACTIVITIES_SERVICE_GRPC_PORT: ${ACTIVITIES_SERVICE_GRPC_PORT}
      ACTIVITIES_SERVICE_REST_PORT: ${ACTIVITIES_SERVICE_REST_PORT}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_HOST: ${REDIS_HOST_TEST}
      REDIS_PORT: ${REDIS_PORT_TEST}
      REDIS_PASSWORD: ${REDIS_PASSWORD_TEST}
      REDIS_DB: ${REDIS_DB_TEST} # Use test Redis DB
      SERVICE_TYPE: main
      SEEDER_DIR: /apps/internal/database/seeders
  
  postgres:
    image: postgres:13-alpine
    container_name: postgres-nb-go-api-test
    environment:
      POSTGRES_USER: ${POSTGRES_USER_TEST:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_TEST:-secret}
      POSTGRES_DB: ${POSTGRES_DB_TEST:-nb_go_api}
    networks:
      - nb-go-api-test-network
    ports:
      - "5433:5432"
    volumes:
      - postgres-test-nb-go-api:/var/lib/postgresql/data

  # redis:
  #   image: "redis:alpine"
  #   container_name: redis-nb-go-api-test
  #   networks:
  #     - nb-go-api-test-network
  #   ports:
  #     - "6380:6379"
  #   volumes:
  #     - ./redis.conf:/usr/local/etc/redis/redis.conf
  #   command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD_TEST}"]
  #   environment:
  #     REDIS_PASSWORD: ${REDIS_PASSWORD_TEST} # Use test Redis password

  # scheduler:
  #   build:
  #     context: ../service
  #     dockerfile: Dockerfile
  #   networks:
  #     - nb-go-api-test-network
  #   depends_on:
  #     - postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB_TEST} # Use test DB
  #     POSTGRES_PORT: ${POSTGRES_PORT}
  #     POSTGRES_HOST: ${POSTGRES_HOST_TEST}
  #     GATEWAY_PORT: ${GATEWAY_PORT}
  #     SERVICE_GRPC_PORT: ${SERVICE_GRPC_PORT}
  #     SERVICE_REST_PORT: ${SERVICE_REST_PORT}
  #     MASTER_SERVICE_GRPC_PORT: ${MASTER_SERVICE_GRPC_PORT}
  #     MASTER_SERVICE_REST_PORT: ${MASTER_SERVICE_REST_PORT}
  #     ACTIVITIES_SERVICE_GRPC_PORT: ${ACTIVITIES_SERVICE_GRPC_PORT}
  #     ACTIVITIES_SERVICE_REST_PORT: ${ACTIVITIES_SERVICE_REST_PORT}
  #     JWT_SECRET: ${JWT_SECRET}
  #     REDIS_HOST: ${REDIS_HOST_TEST}
  #     REDIS_PORT: ${REDIS_PORT_TEST}
  #     REDIS_PASSWORD: ${REDIS_PASSWORD_TEST}
  #     REDIS_DB: ${REDIS_DB_TEST} # Use test Redis DB
  #     SERVICE_TYPE: scheduler

volumes:
  postgres-test-nb-go-api:

networks:
  nb-go-api-test-network:
    driver: bridge